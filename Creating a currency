// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.0;

    contract Crypto{
    string public name = "sivcoin";
    string public symbol = "siv";
    uint256 public totalSupply = 10000000;

    mapping (address =>uint256) public balances;
    mapping (address => mapping(address=>uint256)) public approval;
    constructor(){
    balances[msg.sender]=totalSupply;
    }
    function balanceOf(address _owner) public view returns (uint256 balance){
        return balances[_owner];
    }
    function transfer(address _to, uint256 _value) public returns (bool success){
        balances[msg.sender]=balances[msg.sender] - _value;
        balances[_to]=balances[_to] + _value;
        return true;
    }
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success){
        balances[_from]=balances[_from] - _value;
        balances[_to]=balances[_to] + _value;
        approval[_from][msg.sender]= approval[_from][msg.sender] - _value;
        return true; 
    }
    function approve(address _spender, uint256 _value) public returns (bool success){
        approval[msg.sender][_spender]=approval[msg.sender][_spender] - _value;
        return true;
    }
    function allowance(address _owner, address _spender) public view returns (uint256 remaining){
        return approval[_owner][_spender];
    }
   
}
